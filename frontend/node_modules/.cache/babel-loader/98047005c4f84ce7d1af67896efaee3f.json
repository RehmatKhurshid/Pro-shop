{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from '../constants/orderConstant';\nexport const createdOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/orders', config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createdOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders"],"sources":["/Users/macbook/Documents/proshop/frontend/src/actions/orderAction.js"],"sourcesContent":["import axios from \"axios\";\n\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL} from '../constants/orderConstant';\n\nexport const createdOrder = (order) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {userLogin : {userInfo}, } = getState()\n\n        const config = {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n        const { data } = await axios.post(`/api/orders`, order, config)\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload : data\n        })\n\n    } catch (error) {\n        dispatch({\n            type : ORDER_CREATE_FAIL,\n            payload : error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n   try {\n     dispatch({type: ORDER_DETAILS_REQUEST})\n\n     const {userLogin : {userInfo }, } = getState()\n\n     const config = {\n        headers : {\n            Authorization : `Bearer ${userInfo.token}`\n        }\n     }\n\n     const { data } = await axios.get(`/api/orders/${id}`, config);\n\n     dispatch({\n        type : ORDER_DETAILS_SUCCESS,\n        payload : data\n     })\n\n   } catch (error) {\n      dispatch({\n        type : ORDER_DETAILS_FAIL,\n        payload : error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n      })\n   }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    \n    dispatch({\n        type: ORDER_PAY_REQUEST\n    });\n\n    const {userLogin : {userInfo}, } = getState() \n\n    const config = {\n        headers : {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n        }\n    }\n\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\n\n    dispatch({\n        type : ORDER_PAY_SUCCESS,\n        payload : data\n    })\n  } catch (error) {\n    dispatch({\n        type : ORDER_PAY_FAIL,\n        payload : error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n      })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n      \n      dispatch({\n          type: ORDER_LIST_MY_REQUEST\n      });\n  \n      const {userLogin : {userInfo}, } = getState() \n  \n      const config = {\n          headers : {\n              Authorization: `Bearer ${userInfo.token}`,\n          }\n      }\n  \n      const { data } = await axios.get(`/api/orders/myorders`, config)\n  \n      dispatch({\n          type : ORDER_LIST_MY_SUCCESS,\n          payload : data\n      })\n    } catch (error) {\n      dispatch({\n          type : ORDER_LIST_MY_FAIL,\n          payload : error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n        })\n    }\n  }\n\nexport const listOrders = () => async(dispatch, getState) => {\n  try {\n    dispatch({ type : ORDER_LIST_REQUEST })\n\n    const {userLogin : {userInfo} ,} = getState();\n\n    const config = {\n      headers : {\n        Authorization : `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get('/api/orders', config)\n\n    dispatch({ type : ORDER_LIST_SUCCESS , payload : data})\n  } catch (error) {\n    dispatch({\n      type : ORDER_LIST_FAIL,\n      payload : error.response && error.response.data.message\n      ? error.response.data.message\n      : error.message,\n    })\n  }\n\n}  "],"mappings":"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"},"metadata":{},"sourceType":"module"}