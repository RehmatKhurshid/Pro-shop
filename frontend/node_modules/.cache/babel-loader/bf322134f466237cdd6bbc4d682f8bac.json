{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/proshop/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Loader from '../Components/Loader';\nimport Messages from '../Components/Messages';\nimport { getUserDetails, updateUserProfile } from '../actions/userAction';\nimport { listMyOrders } from '../actions/orderAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user,\n    success\n  } = userDetails;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  console.log('user', user);\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n        console.log('inside');\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, userInfo, navigate, user]);\n\n  const UpdateHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Messages, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Messages, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Messages, {\n        variant: \"success\",\n        children: \"Profile Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: UpdateHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '20px'\n          },\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileScreen, \"RafvlqaDlXHhSwHqKmMXJoScpNI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Form","Col","Row","Button","useNavigate","Loader","Messages","getUserDetails","updateUserProfile","listMyOrders","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","navigate","userLogin","state","userInfo","userDetails","loading","error","user","success","orderListMy","loadingOrders","errorOrders","orders","console","log","UpdateHandler","e","preventDefault","id","_id","target","value","marginTop"],"sources":["/Users/macbook/Documents/proshop/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Form, Col, Row, Button} from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport Loader from '../Components/Loader'\nimport Messages from '../Components/Messages'\nimport { getUserDetails, updateUserProfile } from '../actions/userAction';\nimport { listMyOrders } from '../actions/orderAction'\n\n\nconst ProfileScreen = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const  userLogin  = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user, success } = userDetails;\n\n    const orderListMy = useSelector((state) => state.orderListMy);\n    const { loading : loadingOrders, error : errorOrders, orders } = orderListMy;\n    console.log('user',user);\n\n    useEffect(() => {\n        if(!userInfo){\n            navigate('/login')\n        }else{        \n        if(!user.name){\n            dispatch(getUserDetails('profile'))\n            dispatch(listMyOrders())\n            console.log('inside');\n         }else {\n            setName(user.name);\n            setEmail(user.email)\n         }\n        }\n    }, [dispatch, userInfo, navigate, user])\n    \n    const UpdateHandler = (e) => {\n        e.preventDefault();\n        if(password !== confirmPassword){\n           setMessage('Password do not match')\n        }else{\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\n        }\n\n    }\n\n  return (\n    <Row>\n        <Col md={3}>\n        <h2>Profile</h2>\n        {message && <Messages variant='danger'>{message}</Messages>}\n        {error && <Messages variant='danger'>{error}</Messages>}\n        {success && <Messages variant='success'>Profile Updated</Messages>}\n        {loading && <Loader />}\n\n        <Form onSubmit={UpdateHandler}>\n            <Form.Group controlId='name'>\n                <Form.Label>Enter Name</Form.Label>\n                <Form.Control \n                type='text' \n                placeholder='Enter Name' \n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n                <Form.Label>Enter Email</Form.Label>\n                <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='password'>\n                <Form.Label>Enter Password</Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='confirmPassword'>\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Enter Confirm Password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n            <Button style={{marginTop: '20px'}} type='submit' variant='primary'>Update </Button>\n        </Form>\n        </Col>\n         <Col md={9}>\n\n         </Col>  \n    </Row>\n  )\n}\n\nexport default ProfileScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}